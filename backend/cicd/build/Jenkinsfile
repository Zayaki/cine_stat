pipeline {
  agent any
  options { disableConcurrentBuilds() }
  stages {
    stage('Fetch dependencies') {
      agent any
      steps {
        sh 'cicd/build/0_fetch-dependencies.sh'
        stash includes: 'site/vendor/', name: 'vendor'
      }
    }
    stage('Make release') {
      agent any
      steps {
        unstash 'vendor'
        sh 'cicd/build/5_make_release.sh'
        stash includes: 'jenkins_release/', name: 'jenkins_release'
      }
    }
    stage('Make docker') {
      agent any
      steps {
        unstash 'jenkins_release'
        sh 'cicd/build/6_make_docker.sh'
        stash includes: 'jenkins_release/', name: 'jenkins_release'
      }
    }
  }
  post {
    success {
        unstash 'jenkins_release'
        archiveArtifacts artifacts: 'jenkins_release/*.tar.gz', onlyIfSuccessful: true
        archiveArtifacts artifacts: 'jenkins_release/*.docker', onlyIfSuccessful: true
    }
    always {
        sh 'cicd/build/99_clean.sh'
    }
  }
}
